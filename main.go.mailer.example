package main

import (
	"context"
	"log"

	"github.com/DamiaRalitsa/notif-lib-golang/notification/mailer"
	_ "github.com/lib/pq"
)

func main() {

	// Initialize the MailerHandler
	// mailerConfig := mailer.MailerConfig{
	// 	FabdCoreUrl:   os.Getenv("FABD_CORE_URL"),
	// 	EmailHost:     os.Getenv("EMAIL_HOST"),
	// 	EmailPort:     os.Getenv("EMAIL_PORT"),
	// 	EmailUserName: os.Getenv("EMAIL_USERNAME"),
	// 	EmailPassword: os.Getenv("EMAIL_PASSWORD"),
	// }
	mailerHandler, err := mailer.NewMailerApiHandler()
	if err != nil {
		log.Fatalf("NewMailerHandler failed: %v", err)
	}

	// Send an email with attachments
	emailRecipients := []string{"damiaralitsa@gmail.com"}
	emailSubject := "Test Email"
	emailMessage := "This is a test email with attachments."
	// emailAttachments := []string{"path/to/attachment1.txt", "path/to/attachment2.jpg"}

	attachment := mailer.Attachments{
		FileName:    "attachment1.txt",
		Content:     []byte("This is the content of attachment1.txt"),
		Encoding:    "base64",
		ContentType: "text/plain",
	}

	attachments := append([]mailer.Attachments{}, attachment)

	mail := mailer.Mail{
		To:          emailRecipients,
		Subject:     emailSubject,
		Message:     emailMessage,
		Attachments: attachments,
	}

	mailerHandler.SendEmail(context.Background(), mail)
	// if err != nil {
	// 	log.Fatalf("SendEmailWithAttachments failed: %v", err)
	// }

	// log.Println("Email sent successfully with attachments")

	// mail2 := mailer.MailWithoutAttachments{
	// 	To:      emailRecipients,
	// 	Subject: emailSubject,
	// 	Message: emailMessage,
	// }

	// mailerHandler.SendEmailWithFilePaths(context.Background(), mail2, []string{"test.txt"})

	// log.Println("Email sent successfully with attachments using file paths")
}
